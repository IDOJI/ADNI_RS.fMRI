# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 3. results 폴더에서 서브 폴더 읽기
results_folder <- file.path(folder, "results")
subfolders <- list.files(results_folder, full.names = TRUE)
# "FC_FunImgARCWSF"와 "FC_FunImgARglobalCWSF" 제외
excluded_folders <- c("FC_FunImgARCWSF", "FC_FunImgARglobalCWSF")
subfolders <- subfolders[!basename(subfolders) %in% excluded_folders]
# 4. path_to에 서브 폴더 생성 및 파일 복사
for (subfolder in subfolders) {
# subfolder = subfolders[1]
subfolder_name <- basename(subfolder)
# path_to에 해당 서브 폴더가 없으면 생성
dest_subfolder <- file.path(path_to, subfolder_name)
if (!dir.exists(dest_subfolder)) {
dir.create(dest_subfolder, recursive = TRUE)
}
# 해당 서브 폴더 안의 파일들 읽기
files <- list.files(subfolder, full.names = TRUE)
# 5. 각 파일을 복사하면서 파일명 변경
for (file in files) {
# file = files[1]
file_name <- basename(file)
# 파일명에서 Sub_xxx를 RID_xxxx로 변경
new_file_name <- gsub(sub_id, rid_id, file_name)
# 새 경로 설정
dest_file <- file.path(dest_subfolder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
cat(green("모든 파일 복사가 완료되었습니다.\n"))
}
# 🟥 각 결과 복사 (FC map 제외) =============================================================================================
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test_to"
copy_data_with_rename(path_from_test, path_to_test)
copy_data_with_rename <- function(path_from, path_to) {
# path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
# path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test_to"
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# folder = folders[1]
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 3. results 폴더에서 서브 폴더 읽기
results_folder <- file.path(folder, "results")
subfolders <- list.files(results_folder, full.names = TRUE)
# "FC_FunImgARCWSF"와 "FC_FunImgARglobalCWSF" 제외
excluded_folders <- c("FC_FunImgARCWSF", "FC_FunImgARglobalCWSF")
subfolders <- subfolders[!basename(subfolders) %in% excluded_folders]
# 4. path_to에 서브 폴더 생성 및 파일 복사
for (subfolder in subfolders) {
# subfolder = subfolders[1]
subfolder_name <- basename(subfolder)
# path_to에 해당 서브 폴더가 없으면 생성
dest_subfolder <- file.path(path_to, subfolder_name)
if (!dir.exists(dest_subfolder)) {
dir.create(dest_subfolder, recursive = TRUE)
}
# 해당 서브 폴더 안의 파일들 읽기
files <- list.files(subfolder, full.names = TRUE)
# 5. 각 파일을 복사하면서 파일명 변경
for (file in files) {
# file = files[1]
file_name <- basename(file)
# 파일명에서 Sub_xxx를 RID_xxxx로 변경
new_file_name <- gsub(sub_id, rid_id, file_name)
# 새 경로 설정
dest_file <- file.path(dest_subfolder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(crayon::green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
cat(crayon::green("모든 파일 복사가 완료되었습니다.\n"))
}
# 🟥 각 결과 복사 (FC map 제외) =============================================================================================
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test_to"
copy_data_with_rename(path_from_test, path_to_test)
copy_data_with_rename <- function(path_from, path_to) {
# path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
# path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test_to"
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# folder = folders[1]
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 3. results 폴더에서 서브 폴더 읽기
results_folder <- file.path(folder, "results")
subfolders <- list.files(results_folder, full.names = TRUE)
# "FC_FunImgARCWSF"와 "FC_FunImgARglobalCWSF" 제외
excluded_folders <- c("FC_FunImgARCWSF", "FC_FunImgARglobalCWSF")
subfolders <- subfolders[!basename(subfolders) %in% excluded_folders]
# 4. path_to에 서브 폴더 생성 및 파일 복사
for (subfolder in subfolders) {
# subfolder = subfolders[1]
subfolder_name <- basename(subfolder)
# path_to에 해당 서브 폴더가 없으면 생성
dest_subfolder <- file.path(path_to, subfolder_name)
if (!dir.exists(dest_subfolder)) {
dir.create(dest_subfolder, recursive = TRUE)
}
# 해당 서브 폴더 안의 파일들 읽기
files <- list.files(subfolder, full.names = TRUE)
# 5. 각 파일을 복사하면서 파일명 변경
for (file in files) {
# file = files[1]
file_name <- basename(file)
# 파일명에서 Sub_xxx를 RID_xxxx로 변경
new_file_name <- gsub(sub_id, rid_id, file_name)
# 새 경로 설정
dest_file <- file.path(dest_subfolder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(crayon::green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
cat(crayon::bgMagenta("모든 파일 복사가 완료되었습니다.\n"))
}
# 🟥 각 결과 복사 (FC map 제외) =============================================================================================
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test_to"
copy_data_with_rename(path_from_test, path_to_test)
## 🟨 GE ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_GE.MEDICAL.SYSTEMS"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
## 🟨 Philips ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_Philips"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
copy_data_with_rename <- function(path_from, path_to) {
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 3. results 폴더에서 서브 폴더 읽기
results_folder <- file.path(folder, "results")
subfolders <- list.files(results_folder, full.names = TRUE)
# "FC_FunImgARCWSF"와 "FC_FunImgARglobalCWSF" 제외
excluded_folders <- c("FC_FunImgARCWSF", "FC_FunImgARglobalCWSF")
subfolders <- subfolders[!basename(subfolders) %in% excluded_folders]
# 4. path_to에 서브 폴더 생성 및 파일 복사
for (subfolder in subfolders) {
subfolder_name <- basename(subfolder)
# path_to에 해당 서브 폴더가 없으면 생성
dest_subfolder <- file.path(path_to, subfolder_name)
if (!dir.exists(dest_subfolder)) {
dir.create(dest_subfolder, recursive = TRUE)
}
# 해당 서브 폴더 안의 파일들 읽기
files <- list.files(subfolder, full.names = TRUE)
# 5. 각 파일을 복사하면서 파일명 변경 및 새로운 폴더 생성
for (file in files) {
file_name <- basename(file)
# 파일명에서 Sub_xxx를 RID_xxxx로 변경
new_file_name <- gsub(sub_id, rid_id, file_name)
# 파일명에서 RID 부분을 제외한 앞부분 추출 (예: "ALFFMap")
base_file_name <- gsub(paste0("_", rid_id), "", tools::file_path_sans_ext(new_file_name))
# 새 폴더 생성 (path_to/subfolder_name/base_file_name)
new_folder_path <- file.path(dest_subfolder, base_file_name)
if (!dir.exists(new_folder_path)) {
dir.create(new_folder_path, recursive = TRUE)
}
# 새 경로 설정 (새로운 폴더로 파일 복사)
dest_file <- file.path(new_folder_path, new_file_name)
# 파일 복사 (overwrite 옵션 추가 가능)
file.copy(file, dest_file, overwrite = TRUE)
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(crayon::green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
cat(crayon::bgMagenta("모든 파일 복사가 완료되었습니다.\n"))
}
## 🟨 GE ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_GE.MEDICAL.SYSTEMS"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
## 🟨 Philips ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_Philips"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
## 🟨 Philips2 ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_Philips_Without-AutoMasks"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
## 🟨 SIEMENS_SB ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_SIEMENS_SB"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_data_with_rename(path_from, path_to)
193 + 107 + 17 + 342
# 🟥 copy 4D volumes =========================================================================================================
library(crayon)
copy_4D_volume_files_with_rid <- function(path_from, path_to, folder_names) {
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 각 폴더에서 특정한 이름의 서브 폴더 경로를 찾음
for (target_folder_name in folder_names) {
target_folder_path <- file.path(folder, target_folder_name)
# 해당 폴더가 존재하는지 확인
if (dir.exists(target_folder_path)) {
# 해당 폴더 안의 Sub_XXX 폴더 읽기
sub_folders <- list.files(target_folder_path, full.names = TRUE)
# 각 Sub_XXX 폴더 안의 파일들을 복사
for (sub_folder in sub_folders) {
sub_folder_name <- basename(sub_folder)
# 복사할 파일 읽기 (각 Sub 폴더 안에 파일이 하나라고 가정)
files <- list.files(sub_folder, full.names = TRUE)
for (file in files) {
file_name <- basename(file)
# 새 파일명 생성 (파일명에 RID 추가)
new_file_name <- gsub("(.*)(\\.\\w+)$", paste0("\\1_", rid_id, "\\2"), file_name)
# 새로운 경로 설정 (path_to에 folder_name 하위 경로)
dest_folder <- file.path(path_to, target_folder_name)
# 경로에 해당 폴더가 없으면 생성
if (!dir.exists(dest_folder)) {
dir.create(dest_folder, recursive = TRUE)
}
# 새 파일 경로
dest_file <- file.path(dest_folder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
# 모든 작업이 완료된 후 출력
cat(green("모든 파일 복사가 완료되었습니다.\n"))
}
copy_4D_volume_files_with_rid <- function(path_from, path_to, folder_names) {
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 각 폴더에서 특정한 이름의 서브 폴더 경로를 찾음
for (target_folder_name in folder_names) {
target_folder_path <- file.path(folder, target_folder_name)
# 해당 폴더가 존재하는지 확인
if (dir.exists(target_folder_path)) {
# 해당 폴더 안의 Sub_XXX 폴더 읽기
sub_folders <- list.files(target_folder_path, full.names = TRUE)
# 각 Sub_XXX 폴더 안의 파일들을 복사
for (sub_folder in sub_folders) {
sub_folder_name <- basename(sub_folder)
# 복사할 파일 읽기 (각 Sub 폴더 안에 파일이 하나라고 가정)
files <- list.files(sub_folder, full.names = TRUE)
for (file in files) {
file_name <- basename(file)
# 새 파일명 생성 (파일명에 RID 추가)
new_file_name <- gsub("(.*)(\\.\\w+)$", paste0("\\1_", rid_id, "\\2"), file_name)
# 새로운 경로 설정 (path_to에 folder_name 하위 경로)
dest_folder <- file.path(path_to, target_folder_name)
# 경로에 해당 폴더가 없으면 생성
if (!dir.exists(dest_folder)) {
dir.create(dest_folder, recursive = TRUE)
}
# 새 파일 경로
dest_file <- file.path(dest_folder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
}
}
# 환자의 데이터 복사가 완료되면 메시지 출력
cat(green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
# 모든 작업이 완료된 후 출력
cat(crayon::bgMagenta("모든 파일 복사가 완료되었습니다.\n"))
}
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from_test, path_to_test)
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from_test, path_to_test, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
path_from = path_from_test
path_to = path_to_test
folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF")
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
folder = folders[1]
# 폴더명 추출
folder_name <- basename(folder)
folder_name
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
sub_id
rid_id
target_folder_name = folder_names[1]
# target_folder_name = folder_names[1]
target_folder_path <- file.path(folder, target_folder_name)
target_folder_path
dir.exists(target_folder_path)
# 해당 폴더 안의 Sub_XXX 폴더 읽기
sub_folders <- list.files(target_folder_path, full.names = TRUE)
sub_folders
source("~/Documents/GitHub/ADNI_RS.fMRI/3.Extract Results/0.Setting.r", echo=TRUE)
sub_folder = sub_folders[1]
# sub_folder = sub_folders[1]
sub_folder_name <- basename(sub_folder)
sub_folder_name
# 복사할 파일 읽기 (각 Sub 폴더 안에 파일이 하나라고 가정)
files <- list.files(sub_folder, full.names = TRUE)
files
file = files[1]
# file = files[1]
file_name <- basename(file)
file_name
# 새 파일명 생성 (파일명에 RID 추가)
new_file_name <- gsub("(.*)(\\.\\w+)$", paste0("\\1_", rid_id, "\\2"), file_name)
new_file_name
source("~/Documents/GitHub/ADNI_RS.fMRI/3.Extract Results/0.Setting.r", echo=TRUE)
# 새로운 경로 설정 (path_to에 folder_name 하위 경로)
dest_folder <- file.path(path_to, target_folder_name)
dest_folder
# 새 파일 경로
dest_file <- file.path(dest_folder, new_file_name)
dest_file
copy_4D_volume_files_with_rid <- function(path_from, path_to, folder_names) {
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 환자 데이터 복사 시작 시간 체크
cat(crayon::yellow(paste("환자 데이터 복사 시작:", rid_id, "\n")))
tictoc::tic(paste("환자", rid_id, "의 데이터 복사 시간"))
# 각 폴더에서 특정한 이름의 서브 폴더 경로를 찾음
for (target_folder_name in folder_names) {
# target_folder_name = folder_names[1]
target_folder_path <- file.path(folder, target_folder_name)
# 해당 폴더가 존재하는지 확인
if (dir.exists(target_folder_path)) {
# 해당 폴더 안의 Sub_XXX 폴더 읽기
sub_folders <- list.files(target_folder_path, full.names = TRUE)
# 각 Sub_XXX 폴더 안의 파일들을 복사
for (sub_folder in sub_folders) {
# sub_folder = sub_folders[1]
sub_folder_name <- basename(sub_folder)
# 복사할 파일 읽기 (각 Sub 폴더 안에 파일이 하나라고 가정)
files <- list.files(sub_folder, full.names = TRUE)
for (file in files) {
# file = files[1]
file_name <- basename(file)
# 새 파일명 생성 (파일명에 RID 추가)
new_file_name <- gsub("(.*)(\\.\\w+)$", paste0("\\1_", rid_id, "\\2"), file_name)
# 새로운 경로 설정 (path_to에 folder_name 하위 경로)
dest_folder <- file.path(path_to, target_folder_name)
# 경로에 해당 폴더가 없으면 생성
if (!dir.exists(dest_folder)) {
dir.create(dest_folder, recursive = TRUE)
}
# 새 파일 경로
dest_file <- file.path(dest_folder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
}
}
# 환자의 데이터 복사 완료 및 시간 측정 종료
toc()
cat(green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
# 모든 작업이 완료된 후 출력
cat(crayon::bgMagenta("모든 파일 복사가 완료되었습니다.\n"))
}
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from_test,
path_to_test,
folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
copy_4D_volume_files_with_rid <- function(path_from, path_to, folder_names) {
# 1. path_from에서 폴더 리스트 읽기
folders <- list.files(path_from, full.names = TRUE)
# 2. 각 폴더에 대해서 작업 수행
for (folder in folders) {
# 폴더명 추출
folder_name <- basename(folder)
# folder_name에서 Sub_xxx와 RID_xxxx 추출
sub_id <- regmatches(folder_name, regexpr("Sub_[0-9]+", folder_name))
rid_id <- regmatches(folder_name, regexpr("RID_[0-9]+", folder_name))
# 환자 데이터 복사 시작 시간 체크
cat(crayon::yellow(paste("환자 데이터 복사 시작:", rid_id, "\n")))
tictoc::tic(paste("환자", rid_id, "의 데이터 복사 시간"))
# 각 폴더에서 특정한 이름의 서브 폴더 경로를 찾음
for (target_folder_name in folder_names) {
# target_folder_name = folder_names[1]
target_folder_path <- file.path(folder, target_folder_name)
# 해당 폴더가 존재하는지 확인
if (dir.exists(target_folder_path)) {
# 해당 폴더 안의 Sub_XXX 폴더 읽기
sub_folders <- list.files(target_folder_path, full.names = TRUE)
# 각 Sub_XXX 폴더 안의 파일들을 복사
for (sub_folder in sub_folders) {
# sub_folder = sub_folders[1]
sub_folder_name <- basename(sub_folder)
# 복사할 파일 읽기 (각 Sub 폴더 안에 파일이 하나라고 가정)
files <- list.files(sub_folder, full.names = TRUE)
for (file in files) {
# file = files[1]
file_name <- basename(file)
# 새 파일명 생성 (파일명에 RID 추가)
new_file_name <- gsub("(.*)(\\.\\w+)$", paste0("\\1_", rid_id, "\\2"), file_name)
# 새로운 경로 설정 (path_to에 folder_name 하위 경로)
dest_folder <- file.path(path_to, target_folder_name)
# 경로에 해당 폴더가 없으면 생성
if (!dir.exists(dest_folder)) {
dir.create(dest_folder, recursive = TRUE)
}
# 새 파일 경로
dest_file <- file.path(dest_folder, new_file_name)
# 파일 복사
file.copy(file, dest_file)
}
}
}
}
# 환자의 데이터 복사 완료 및 시간 측정 종료
tictoc::toc()
cat(green(paste("환자 데이터 복사 완료:", rid_id, "\n")))
}
# 모든 작업이 완료된 후 출력
cat(crayon::bgMagenta("모든 파일 복사가 완료되었습니다.\n"))
}
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from_test,
path_to_test,
folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 test =======================================================================================================
path_from_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/test"
path_to_test = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from_test,
path_to_test,
folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 GE ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_GE.MEDICAL.SYSTEMS"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/1.Results"
copy_4D_volume_files_with_rid(path_from, path_to, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 GE ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_GE.MEDICAL.SYSTEMS"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from, path_to, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 Philips ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_Philips"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from, path_to, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 Philips2 ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_Philips_Without-AutoMasks"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from, path_to, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
## 🟨 SIEMENS_SB ===============================================================================================================
path_from = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Completed_SIEMENS_SB"
path_to = "/Volumes/ADNI_SB_SSD_NTFS_4TB_Sandisk/New/Extracted Results/2.4D Volume"
copy_4D_volume_files_with_rid(path_from, path_to, folder_names = c("FunImgARCWSF", "FunImgARglobalCWSF"))
